{"version":3,"file":"notification-toastr.umd.js","sources":["../../../projects/notification-toastr/src/lib/notification.model.ts","../../../projects/notification-toastr/src/lib/notification-toastr.service.ts","../../../projects/notification-toastr/src/lib/notification-toastr.component.ts","../../../projects/notification-toastr/src/lib/notification-toastr.component.html","../../../projects/notification-toastr/src/lib/notification-toastr.module.ts","../../../projects/notification-toastr/src/public-api.ts","../../../projects/notification-toastr/src/notification-toastr.ts"],"sourcesContent":["export class Notification{\r\n    constructor(public title:string,public type:string,public msg:string,public show:boolean,public timeout:number){}\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Notification } from './notification.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class NotificationToastService {\n\n  notifications: Notification[] = [];\n  public subject = new Subject<Notification>();\n\n  notification = new Notification(\"\", \"\", \"\", false, 4000);\n  constructor() { }\n\n  getAlert(): Observable<any> {\n    return this.subject.asObservable();\n  }\n  sendSuccess(message: string, title: string) {\n\n    this.notification = new Notification(\"\", \"\", \"\", false, 4000);\n    this.notification.title = title;\n    this.notification.type = \"success\";\n    this.notification.msg = message;\n    this.notification.show = true;\n    this.subject.next(<Notification>this.notification);\n  }\n  sendError(message: string, title: string) {\n\n    this.notification = new Notification(\"\", \"\", \"\", false, 4000);\n    this.notification.title = title;\n    this.notification.type = \"error\";\n    this.notification.msg = message;\n    this.notification.show = true;\n    this.subject.next(<Notification>this.notification);\n  }\n  sendInfo(message: string, title: string) {\n\n    this.notification = new Notification(\"\", \"\", \"\", false, 90000);\n    this.notification.title = title;\n    this.notification.type = \"info\";\n    this.notification.msg = message;\n    this.notification.show = true;\n    this.subject.next(<Notification>this.notification);\n  }\n  sendWarning(message: string, title: string) {\n\n    this.notification = new Notification(\"\", \"\", \"\", false, 4000);\n    this.notification.title = title;\n    this.notification.type = \"warning\";\n    this.notification.msg = message;\n    this.notification.show = true;\n    this.subject.next(<Notification>this.notification);\n  }\n  clear() {\n    this.subject.next();\n  }\n\n  hideNotification() {\n    return this.notification.show = false;\n  }\n\n\n}","import { Component, OnInit } from '@angular/core';\nimport { NotificationToastService } from './notification-toastr.service';\nimport { Notification } from './notification.model';\n\n@Component({\n  selector: 'notification-toastr',\n  templateUrl: './notification-toastr.component.html',\n  styleUrls: ['./notification-toastr.component.css']\n})\nexport class NotificationToastrComponent implements OnInit {\n\n  notifications: Notification[] = [];\n  aboveFive: Notification[] = [];\n  moreThanFive = false;\n  hide=true;\n  constructor(private notificationService: NotificationToastService) { }\n  ngOnInit(): void {\n    if (this.aboveFive.length == 0) {\n      this.moreThanFive = false;\n    }\n    this.notificationService.getAlert().subscribe((toast: Notification) => {\n      if (!toast) {\n        this.notifications = [];\n        return;\n      }\n      this.notifications.push(toast);\n      if (this.notifications.length > 5) {\n        this.moreThanFive = true;\n        this.aboveFive.push(this.notifications[0]);\n        this.notifications.splice(0, 1);\n      }\n      setTimeout(() => {\n        \n        if (this.aboveFive.length > 0) {\n          this.notifications.push(this.aboveFive[this.aboveFive.length - 1]);\n          this.aboveFive.splice(this.aboveFive.length - 1, 1);\n        }\n        if (this.aboveFive.length == 0) {\n          this.moreThanFive = false;\n        }\n        if(this.notifications.length>0 || this.aboveFive.length>0){\n          this.notifications = this.notifications.filter(x => x !== toast);\n          this.aboveFive = this.aboveFive.filter(x => x !== toast);\n        }\n        \n      }, toast.timeout);\n    });\n  }\n  removeNotification(notification: Notification) {\n    this.notifications = this.notifications.filter(x => x !== notification);\n    if (this.aboveFive.length > 0) {\n      this.notifications.push(this.aboveFive[this.aboveFive.length - 1]);\n      this.aboveFive.splice(this.aboveFive.length - 1, 1);\n    }\n\n    if (this.aboveFive.length == 0) {\n      this.moreThanFive = false;\n    }\n  }\n}\n","<div class=\"toast-top-right\">\n  <ng-container *ngFor=\"let notification of notifications\">\n    <div\n      *ngIf=\"notification.show\"\n      id=\"toast-container\"\n      role=\"button\"\n      (click)=\"removeNotification(notification)\"\n    >\n      <div\n        class=\"toast toast-{{ notification.type }}\"\n        aria-live=\"polite\"\n        style=\"display: block\"\n      >\n        <div class=\"toast-title\">\n          {{ notification.title }}\n        </div>\n        <div class=\"toast-message\">\n          {{ notification.msg }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"moreThanFive\">\n    <button *ngIf=\"hide\" (click)=\"hide = false\" class=\"btn\">Show</button\n    ><button *ngIf=\"!hide\" (click)=\"hide = true\" class=\"btn\">Hide</button>\n\n    <div *ngIf=\"!hide\" class=\"toast-group\">\n      <div *ngFor=\"let notification of aboveFive\" class=\"toast-container-group\">\n        <div *ngIf=\"notification.show\">\n          <div class=\"toast-container-group-text-{{ notification.type }}\">\n            <b style=\"margin-left: 5px\">{{ notification.title }}:</b>\n            {{ notification.msg }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NotificationToastrComponent } from './notification-toastr.component';\nimport { NotificationToastService } from './notification-toastr.service';\n\n\n\n@NgModule({\n  declarations: [\n    NotificationToastrComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  exports: [\n    NotificationToastrComponent\n  ],\n  providers:[\n    NotificationToastService\n  ]\n\n})\nexport class NotificationToastrModule { }\n","/*\n * Public API Surface of notification-toastr\n */\n\nexport * from './lib/notification-toastr.service';\nexport * from './lib/notification-toastr.component';\nexport * from './lib/notification-toastr.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Subject","Injectable","Component","BrowserModule","NgModule"],"mappings":"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"}