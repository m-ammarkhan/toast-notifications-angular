{"version":3,"file":"notification-toastr.js","sources":["../../../projects/notification-toastr/src/lib/notification.model.ts","../../../projects/notification-toastr/src/lib/notification-toastr.service.ts","../../../projects/notification-toastr/src/lib/notification-toastr.component.ts","../../../projects/notification-toastr/src/lib/notification-toastr.component.html","../../../projects/notification-toastr/src/lib/notification-toastr.module.ts","../../../projects/notification-toastr/src/public-api.ts","../../../projects/notification-toastr/src/notification-toastr.ts"],"sourcesContent":["export class Notification{\r\n    constructor(public title:string,public type:string,public msg:string,public show:boolean,public timeout:number){}\r\n}","import { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { Notification } from './notification.model';\n\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class NotificationToastService {\n\n  notifications: Notification[] = [];\n  public subject = new Subject<Notification>();\n\n  notification = new Notification(\"\", \"\", \"\", false, 4000);\n  constructor() { }\n\n  getAlert(): Observable<any> {\n    return this.subject.asObservable();\n  }\n  sendSuccess(message: string, title: string) {\n\n    this.notification = new Notification(\"\", \"\", \"\", false, 4000);\n    this.notification.title = title;\n    this.notification.type = \"success\";\n    this.notification.msg = message;\n    this.notification.show = true;\n    this.subject.next(<Notification>this.notification);\n  }\n  sendError(message: string, title: string) {\n\n    this.notification = new Notification(\"\", \"\", \"\", false, 4000);\n    this.notification.title = title;\n    this.notification.type = \"error\";\n    this.notification.msg = message;\n    this.notification.show = true;\n    this.subject.next(<Notification>this.notification);\n  }\n  sendInfo(message: string, title: string) {\n\n    this.notification = new Notification(\"\", \"\", \"\", false, 90000);\n    this.notification.title = title;\n    this.notification.type = \"info\";\n    this.notification.msg = message;\n    this.notification.show = true;\n    this.subject.next(<Notification>this.notification);\n  }\n  sendWarning(message: string, title: string) {\n\n    this.notification = new Notification(\"\", \"\", \"\", false, 4000);\n    this.notification.title = title;\n    this.notification.type = \"warning\";\n    this.notification.msg = message;\n    this.notification.show = true;\n    this.subject.next(<Notification>this.notification);\n  }\n  clear() {\n    this.subject.next();\n  }\n\n  hideNotification() {\n    return this.notification.show = false;\n  }\n\n\n}","import { Component, OnInit } from '@angular/core';\nimport { NotificationToastService } from './notification-toastr.service';\nimport { Notification } from './notification.model';\n\n@Component({\n  selector: 'notification-toastr',\n  templateUrl: './notification-toastr.component.html',\n  styleUrls: ['./notification-toastr.component.css']\n})\nexport class NotificationToastrComponent implements OnInit {\n\n  notifications: Notification[] = [];\n  aboveFive: Notification[] = [];\n  moreThanFive = false;\n  hide=true;\n  constructor(private notificationService: NotificationToastService) { }\n  ngOnInit(): void {\n    if (this.aboveFive.length == 0) {\n      this.moreThanFive = false;\n    }\n    this.notificationService.getAlert().subscribe((toast: Notification) => {\n      if (!toast) {\n        this.notifications = [];\n        return;\n      }\n      this.notifications.push(toast);\n      if (this.notifications.length > 5) {\n        this.moreThanFive = true;\n        this.aboveFive.push(this.notifications[0]);\n        this.notifications.splice(0, 1);\n      }\n      setTimeout(() => {\n        \n        if (this.aboveFive.length > 0) {\n          this.notifications.push(this.aboveFive[this.aboveFive.length - 1]);\n          this.aboveFive.splice(this.aboveFive.length - 1, 1);\n        }\n        if (this.aboveFive.length == 0) {\n          this.moreThanFive = false;\n        }\n        if(this.notifications.length>0 || this.aboveFive.length>0){\n          this.notifications = this.notifications.filter(x => x !== toast);\n          this.aboveFive = this.aboveFive.filter(x => x !== toast);\n        }\n        \n      }, toast.timeout);\n    });\n  }\n  removeNotification(notification: Notification) {\n    this.notifications = this.notifications.filter(x => x !== notification);\n    if (this.aboveFive.length > 0) {\n      this.notifications.push(this.aboveFive[this.aboveFive.length - 1]);\n      this.aboveFive.splice(this.aboveFive.length - 1, 1);\n    }\n\n    if (this.aboveFive.length == 0) {\n      this.moreThanFive = false;\n    }\n  }\n}\n","<div class=\"toast-top-right\">\n  <ng-container *ngFor=\"let notification of notifications\">\n    <div\n      *ngIf=\"notification.show\"\n      id=\"toast-container\"\n      role=\"button\"\n      (click)=\"removeNotification(notification)\"\n    >\n      <div\n        class=\"toast toast-{{ notification.type }}\"\n        aria-live=\"polite\"\n        style=\"display: block\"\n      >\n        <div class=\"toast-title\">\n          {{ notification.title }}\n        </div>\n        <div class=\"toast-message\">\n          {{ notification.msg }}\n        </div>\n      </div>\n    </div>\n  </ng-container>\n\n  <div *ngIf=\"moreThanFive\">\n    <button *ngIf=\"hide\" (click)=\"hide = false\" class=\"btn\">Show</button\n    ><button *ngIf=\"!hide\" (click)=\"hide = true\" class=\"btn\">Hide</button>\n\n    <div *ngIf=\"!hide\" class=\"toast-group\">\n      <div *ngFor=\"let notification of aboveFive\" class=\"toast-container-group\">\n        <div *ngIf=\"notification.show\">\n          <div class=\"toast-container-group-text-{{ notification.type }}\">\n            <b style=\"margin-left: 5px\">{{ notification.title }}:</b>\n            {{ notification.msg }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NotificationToastrComponent } from './notification-toastr.component';\nimport { NotificationToastService } from './notification-toastr.service';\n\n\n\n@NgModule({\n  declarations: [\n    NotificationToastrComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  exports: [\n    NotificationToastrComponent\n  ],\n  providers:[\n    NotificationToastService\n  ]\n\n})\nexport class NotificationToastrModule { }\n","/*\n * Public API Surface of notification-toastr\n */\n\nexport * from './lib/notification-toastr.service';\nexport * from './lib/notification-toastr.component';\nexport * from './lib/notification-toastr.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}